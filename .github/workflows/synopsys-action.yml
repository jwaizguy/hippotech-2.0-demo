# example workflow for Polaris scans using the Synopsys Action
# https://github.com/marketplace/actions/synopsys-action
name: polaris
on:
  push:
    branches: [ main, master, develop, stage, release ]
  pull_request:
    branches: [ main, master, develop, stage, release ]
  workflow_dispatch:
jobs:
  polaris:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4
    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.2
      with: 
    # Set always-auth in npmrc.
        always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
        node-version: >10.15.0
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
        node-version-file: package.json
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
    architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
    check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
    registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
    scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
    cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
          
      # uses: ng-easy/npm-setup@v1.7.2 
      # with:
      # run: npm run build
    - name: Setup Java JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: microsoft 
    - name: Polaris Scan 2
      uses: synopsys-sig/synopsys-action@v1.8.0
      with:
        polaris_server_url: ${{ vars.POLARIS_SERVERURL }}
        polaris_access_token: ${{ secrets.POLARIS_ACCESS_TOKEN }}
        polaris_assessment_types: 'SAST,SCA'
        # polaris_application_name: JWtest-${{ github.event.repository.name }}
        polaris_application_name: JWtest
        polaris_project_name: ${{ github.event.repository.name }}
        # polaris_project_name: "HelloJava"
        # polaris_branch_name: main
        polaris_branch_parent_name: main
        polaris_prComment_enabled: ${{ github.event_name == 'pull_request' && 'true' || 'false' }}
        polaris_reports_sarif_create: ${{ github.event_name != 'pull_request' && 'true' || 'false' }}
        polaris_upload_sarif_report: ${{ github.event_name != 'pull_request' && 'true' || 'false' }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
#    - name: Save Logs
#      if: always()
#      uses: actions/upload-artifact@v4
#      with:
#        name: bridge-logs
#        path: ${{ github.workspace }}/.bridge
